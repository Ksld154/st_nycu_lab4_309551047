# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
    tags:
      - '*'

jobs:
  compile:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Compile files with Gradle
      run: ./gradlew compileJava
    
    - name: Compile test files with Gradle
      run: ./gradlew compileTestJava
  

  test:
    needs: compile
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Test with Gradle
      run: ./gradlew test

    - name: Archive test report
      uses: actions/upload-artifact@v2
      with:
        name: testReport
        path: build/reports
    

  assemble:
    needs: [compile, test]
    runs-on: ubuntu-latest

    outputs:
      jarfile: ${{ steps.getJarFileName.outputs.jarfile }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: assemble with Gradle
      run: ./gradlew assemble
    
    - id: getJarFileName
      run: echo "::set-output name=jarfile::$(gradle printJarFileName | tail -n 3 | head -n 1)"

    - name: Archive jar file
      uses: actions/upload-artifact@v2
      with:
        name: buildJar
        path: build/libs

  release: 
    needs: [compile, test, assemble]
    
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Download jar file
      uses: actions/download-artifact@v2
      with:
        name: buildJar
        path: jarFolder
    
    - name: Display structure of downloaded files
      run: ls -R jarFolder

    - name: Get filename of jar
      id: get_jar_filename
      run: |
        echo "jarFileName=`ls jarFolder`" >> $GITHUB_ENV

    - name: Get output from last job
      run: echo "${{ needs.assemble.outputs.jarfile }}"

    - name: Release to Github
      uses: softprops/action-gh-release@v1
      with:
        files: |
          jarFolder/${{ env.jarFileName }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}